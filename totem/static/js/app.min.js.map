{
  "version": 3,
  "sources": ["../../../node_modules/@zootools/email-spell-checker/dist/lib/helpers/assert.js", "../../../node_modules/@zootools/email-spell-checker/dist/lib/helpers/assert-valid-user-options.js", "../../../node_modules/@zootools/email-spell-checker/dist/lib/helpers/encode-email.js", "../../../node_modules/@zootools/email-spell-checker/dist/lib/helpers/find-closest-domain.js", "../../../node_modules/@zootools/email-spell-checker/dist/lib/helpers/trim.js", "../../../node_modules/@zootools/email-spell-checker/dist/lib/helpers/parse-email.js", "../../../node_modules/@zootools/email-spell-checker/dist/lib/suggest-email.js", "../../../node_modules/@zootools/email-spell-checker/dist/lib/fuzzy-detection/sift3-distance.js", "../../../node_modules/@zootools/email-spell-checker/dist/lib/config/index.js", "../../../node_modules/@zootools/email-spell-checker/dist/lib/helpers/get-options.js", "../../../node_modules/@zootools/email-spell-checker/dist/lib/run.js", "../../../node_modules/@zootools/email-spell-checker/dist/index.js", "../../../assets/js/emailSpellCheck.js", "../../../assets/js/logger.js", "../../../assets/js/app.js"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error(message);\n    }\n}\nexports.default = assert;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert_1 = __importDefault(require(\"./assert\"));\nfunction assertValidUserOptions(options) {\n    assert_1.default(Array.isArray(options.domains), 'domains must be an array');\n    assert_1.default(Array.isArray(options.topLevelDomains), 'topLevelDomains must be an array');\n    assert_1.default(Array.isArray(options.secondLevelDomains), 'secondLevelDomains must be an array');\n    assert_1.default(typeof options.distanceFunction === 'function', 'distanceFunction must be a function');\n}\nexports.default = assertValidUserOptions;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Encode the email address to prevent XSS but leave in valid\n// characters, following this official spec:\n// http://en.wikipedia.org/wiki/Email_address#Syntax\n//\n// We have to replace all the possible characters.\n// that's why we use a regex with a global flag.\nfunction encodeEmail(email) {\n    const result = encodeURI(email)\n        .replace(/%20/g, ' ')\n        .replace(/%25/g, '%')\n        .replace(/%5E/g, '^')\n        .replace(/%60/g, '`')\n        .replace(/%7B/g, '{')\n        .replace(/%7C/g, '|')\n        .replace(/%7D/g, '}');\n    return result;\n}\nexports.default = encodeEmail;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction findClosestDomain(opts) {\n    const { domain, domains, distanceFunction, threshold } = opts;\n    let dist;\n    let minDist = Infinity;\n    let closestDomain = null;\n    if (!domain || !domains) {\n        return undefined;\n    }\n    for (let i = 0; i < domains.length; i++) {\n        if (domain === domains[i]) {\n            return domain;\n        }\n        dist = distanceFunction(domain, domains[i]);\n        if (dist < minDist) {\n            minDist = dist;\n            closestDomain = domains[i];\n        }\n    }\n    if (minDist <= threshold && closestDomain !== null) {\n        return closestDomain;\n    }\n    else {\n        return undefined;\n    }\n}\nexports.default = findClosestDomain;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst WHITESPACE_PATTERN = /\\s/;\n/**\n * Just in case a browser doesn't support .trim\n * Copied from https://github.com/Trott/trim\n * Credits to them\n */\nfunction trim(str) {\n    if (str.trim) {\n        return str.trim();\n    }\n    return right(left(str));\n}\nfunction left(str) {\n    if (str.trimLeft)\n        return str.trimLeft();\n    return str.replace(/^\\s\\s*/, '');\n}\nfunction right(str) {\n    if (str.trimRight)\n        return str.trimRight();\n    let i = str.length;\n    while (WHITESPACE_PATTERN.test(str.charAt(--i)))\n        ;\n    return str.slice(0, i + 1);\n}\nexports.default = trim;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst trim_1 = __importDefault(require(\"./trim\"));\nconst MINIUM_EMAIL_PARTS = 2;\nfunction parseEmail(emailStr) {\n    const email = trim_1.default(emailStr);\n    const parts = email.split('@');\n    if (parts.length < MINIUM_EMAIL_PARTS) {\n        return false;\n    }\n    for (let i = 0; i < parts.length; i++) {\n        if (parts[i] === '') {\n            return false;\n        }\n    }\n    // FYI, in hello@example.com\n    // secondLevelDomain -> example\n    // topLevelDomain -> com\n    let sld = '';\n    let tld = '';\n    const domain = parts.pop();\n    const domainParts = domain.split('.');\n    if (domainParts.length === 0) {\n        // The address does not have a top-level domain\n        return false;\n    }\n    else if (domainParts.length == 1) {\n        // The address has only a top-level domain (valid under RFC)\n        tld = domainParts[0];\n    }\n    else {\n        // The address has a domain and a top-level domain\n        sld = domainParts[0];\n        for (let j = 1; j < domainParts.length; j++) {\n            tld += domainParts[j] + '.';\n        }\n        tld = tld.substring(0, tld.length - 1);\n    }\n    return {\n        topLevelDomain: tld,\n        secondLevelDomain: sld,\n        domain,\n        address: parts.join('@'),\n    };\n}\nexports.default = parseEmail;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst encode_email_1 = __importDefault(require(\"./helpers/encode-email\"));\nconst find_closest_domain_1 = __importDefault(require(\"./helpers/find-closest-domain\"));\nconst parse_email_1 = __importDefault(require(\"./helpers/parse-email\"));\nfunction suggestEmail(opts) {\n    const encodedEmail = encode_email_1.default(opts.email.toLowerCase());\n    const email = parse_email_1.default(encodedEmail);\n    if (!email) {\n        return undefined;\n    }\n    const { domains, domainThreshold, distanceFunction, secondLevelDomains, topLevelDomains, } = opts;\n    if (secondLevelDomains && topLevelDomains) {\n        // If the email is a valid 2nd-level + top-level, do not suggest anything.\n        // if (hasValidSecondLevelDomain(email) && hasValidTopLevelDomain(email)) {\n        if (secondLevelDomains.indexOf(email.secondLevelDomain) !== -1 &&\n            topLevelDomains.indexOf(email.topLevelDomain) !== -1) {\n            return undefined;\n        }\n    }\n    let closestDomain = find_closest_domain_1.default({\n        domain: email.domain,\n        domains,\n        distanceFunction,\n        threshold: domainThreshold,\n    });\n    if (closestDomain) {\n        if (closestDomain == email.domain) {\n            // The email address exactly matches one of the supplied domains; do not return a suggestion.\n            return undefined;\n        }\n        else {\n            // The email address closely matches one of the supplied domains; return a suggestion\n            return {\n                address: email.address,\n                domain: closestDomain,\n                full: email.address + '@' + closestDomain,\n            };\n        }\n    }\n    // The email address does not closely match one of the supplied domains\n    const closestSecondLevelDomain = find_closest_domain_1.default({\n        domain: email.secondLevelDomain,\n        domains: secondLevelDomains,\n        distanceFunction,\n        threshold: opts.secondLevelThreshold,\n    });\n    const closestTopLevelDomain = find_closest_domain_1.default({\n        domain: email.topLevelDomain,\n        domains: topLevelDomains,\n        distanceFunction,\n        threshold: opts.topLevelThreshold,\n    });\n    if (email.domain) {\n        closestDomain = email.domain;\n        let rtrn = false;\n        if (closestSecondLevelDomain &&\n            closestSecondLevelDomain != email.secondLevelDomain) {\n            // The email address may have a mispelled second-level domain; return a suggestion\n            closestDomain = closestDomain.replace(email.secondLevelDomain, closestSecondLevelDomain);\n            rtrn = true;\n        }\n        if (closestTopLevelDomain &&\n            closestTopLevelDomain != email.topLevelDomain &&\n            email.secondLevelDomain !== '') {\n            // The email address may have a mispelled top-level domain; return a suggestion\n            closestDomain = closestDomain.replace(new RegExp(email.topLevelDomain + '$'), closestTopLevelDomain);\n            rtrn = true;\n        }\n        if (rtrn) {\n            return {\n                address: email.address,\n                domain: closestDomain,\n                full: email.address + '@' + closestDomain,\n            };\n        }\n    }\n    /* The email address exactly matches one of the supplied domains, does not closely\n     * match any domain and does not appear to simply have a mispelled top-level domain,\n     * or is an invalid email address; do not return a suggestion.\n     */\n    return undefined;\n}\nexports.default = suggestEmail;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction sift3Distance(s1, s2) {\n    // sift3: http://siderite.blogspot.com/2007/04/super-fast-and-accurate-string-distance.html\n    if (s1 == null || s1.length === 0) {\n        if (s2 == null || s2.length === 0) {\n            return 0;\n        }\n        else {\n            return s2.length;\n        }\n    }\n    if (s2 == null || s2.length === 0) {\n        return s1.length;\n    }\n    let c = 0;\n    let offset1 = 0;\n    let offset2 = 0;\n    let lcs = 0;\n    const maxOffset = 5;\n    while (c + offset1 < s1.length && c + offset2 < s2.length) {\n        if (s1.charAt(c + offset1) == s2.charAt(c + offset2)) {\n            lcs++;\n        }\n        else {\n            offset1 = 0;\n            offset2 = 0;\n            for (let i = 0; i < maxOffset; i++) {\n                if (c + i < s1.length && s1.charAt(c + i) == s2.charAt(c)) {\n                    offset1 = i;\n                    break;\n                }\n                if (c + i < s2.length && s1.charAt(c) == s2.charAt(c + i)) {\n                    offset2 = i;\n                    break;\n                }\n            }\n        }\n        c++;\n    }\n    return (s1.length + s2.length) / 2 - lcs;\n}\nexports.default = sift3Distance;\n", "\"use strict\";\n// Default configuration options\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.POPULAR_TLDS = exports.POPULAR_DOMAINS = exports.DEFAULT_CONFIG = void 0;\nconst sift3_distance_1 = __importDefault(require(\"../fuzzy-detection/sift3-distance\"));\n/***\n * Default list of popular emails for 2022 and onwards.\n * https://www.mailmunch.com/blog/best-email-service-providers\n *\n * If you find a domain you want to add, please submit a PR.\n * Also, notice that this list is not exhaustive.\n * You can always pass your own list of domains.\n */\nconst POPULAR_DOMAINS = [\n    'msn.com',\n    'bellsouth.net',\n    'telus.net',\n    'comcast.net',\n    'optusnet.com.au',\n    'earthlink.net',\n    'qq.com',\n    'sky.com',\n    'icloud.com',\n    'sympatico.ca',\n    'googlemail.com',\n    'att.net',\n    'xtra.co.nz',\n    'web.de',\n    'cox.net',\n    'gmail.com',\n    'ymail.com',\n    'aim.com',\n    'rogers.com',\n    'verizon.net',\n    'rocketmail.com',\n    'optonline.net',\n    'sbcglobal.net',\n    // aol\n    'aol.com',\n    'aim.com',\n    'me.com',\n    'mailw.com',\n    'btinternet.com',\n    'charter.net',\n    'shaw.ca',\n    'hey.com',\n    // Proton\n    'proton.me',\n    'pm.com',\n    'protonmail.com',\n    'zoho.com',\n    'yandex.com',\n    'titan.email',\n];\nexports.POPULAR_DOMAINS = POPULAR_DOMAINS;\nconst POPULAR_TLDS = [\n    'com',\n    'com.au',\n    'com.tw',\n    'co',\n    'ca',\n    'co.nz',\n    'co.uk',\n    'de',\n    'fr',\n    'it',\n    'ru',\n    'org',\n    'edu',\n    'gov',\n    'jp',\n    'nl',\n    'kr',\n    'se',\n    'eu',\n    'ie',\n    'co.il',\n    'us',\n    'at',\n    'be',\n    'dk',\n    'hk',\n    'es',\n    'gr',\n    'ch',\n    'no',\n    'cz',\n    'net',\n    'net.au',\n    'info',\n    'biz',\n    'mil',\n    'co.jp',\n    'sg',\n    'hu',\n    'uk',\n    'sk',\n    // Country specific popular domains\n    'ar',\n    'cf',\n    'cl',\n    'cn',\n    'ga',\n    'gq',\n    'ir',\n    'ml',\n    'mx',\n    'nu',\n    'nz',\n    'ph',\n    'pl',\n    'ro',\n    'tk',\n    'tw',\n    'ua',\n    'vg',\n    'ws',\n    'xn',\n    'za',\n    // popular TLDs that startup use in 2022\n    // https://thewebsiteflip.com/domains/funded-startup-brands-2021/#:~:text=from%20the%20data.-,1.,TLDs%20for%20the%20foreseeable%20future.\n    // https://martijnoud.com/most-popular-tld-crypto/\n    'app',\n    'au',\n    'ai',\n    'biz',\n    'br',\n    'blog',\n    'cloud',\n    'club',\n    'cc',\n    'de',\n    'dev',\n    'digital',\n    'fi',\n    'finance',\n    'id',\n    'in',\n    'io',\n    'me',\n    'mobi',\n    'network',\n    'pw',\n    'so',\n    'xyz',\n    'software',\n    'to',\n    'tech',\n];\nexports.POPULAR_TLDS = POPULAR_TLDS;\nconst DEFAULT_CONFIG = {\n    domainThreshold: 2,\n    domains: POPULAR_DOMAINS,\n    secondLevelThreshold: 2,\n    secondLevelDomains: ['yahoo', 'hotmail', 'mail', 'live', 'outlook'],\n    topLevelThreshold: 2,\n    topLevelDomains: POPULAR_TLDS,\n    distanceFunction: sift3_distance_1.default,\n};\nexports.DEFAULT_CONFIG = DEFAULT_CONFIG;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst config_1 = require(\"../config\");\nfunction getOptions(userOptions) {\n    return {\n        email: userOptions.email,\n        domains: userOptions.domains || config_1.DEFAULT_CONFIG.domains,\n        topLevelDomains: userOptions.topLevelDomains || config_1.DEFAULT_CONFIG.topLevelDomains,\n        secondLevelDomains: userOptions.secondLevelDomains || config_1.DEFAULT_CONFIG.secondLevelDomains,\n        distanceFunction: userOptions.distanceFunction || config_1.DEFAULT_CONFIG.distanceFunction,\n        domainThreshold: userOptions.domainThreshold || config_1.DEFAULT_CONFIG.domainThreshold,\n        secondLevelThreshold: userOptions.secondLevelThreshold || config_1.DEFAULT_CONFIG.secondLevelThreshold,\n        topLevelThreshold: userOptions.topLevelThreshold || config_1.DEFAULT_CONFIG.topLevelThreshold,\n        suggested: userOptions.suggested || undefined,\n        empty: userOptions.suggested || undefined,\n    };\n}\nexports.default = getOptions;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert_valid_user_options_1 = __importDefault(require(\"./helpers/assert-valid-user-options\"));\nconst suggest_email_1 = __importDefault(require(\"./suggest-email\"));\nconst get_options_1 = __importDefault(require(\"./helpers/get-options\"));\nfunction run(userOptions) {\n    const options = get_options_1.default(userOptions);\n    assert_valid_user_options_1.default(options || {});\n    const email = suggest_email_1.default(options);\n    if (!email && userOptions.empty) {\n        userOptions.empty();\n    }\n    if (email && userOptions.suggested) {\n        userOptions.suggested(email);\n    }\n    return email;\n}\nexports.default = run;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.POPULAR_TLDS = exports.POPULAR_DOMAINS = exports.run = void 0;\nconst run_1 = __importDefault(require(\"./lib/run\"));\nexports.run = run_1.default;\nconst config_1 = require(\"./lib/config\");\nObject.defineProperty(exports, \"POPULAR_DOMAINS\", { enumerable: true, get: function () { return config_1.POPULAR_DOMAINS; } });\nObject.defineProperty(exports, \"POPULAR_TLDS\", { enumerable: true, get: function () { return config_1.POPULAR_TLDS; } });\nconst MailSpellChecker = {\n    run: run_1.default,\n    POPULAR_DOMAINS: config_1.POPULAR_DOMAINS,\n    POPULAR_TLDS: config_1.POPULAR_TLDS,\n};\nexports.default = MailSpellChecker;\n", "import emailSpellChecker from \"@zootools/email-spell-checker\"\n\nfunction debounce(func, timeout = 300) {\n  let timer\n  return (...args) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      func.apply(this, args)\n    }, timeout)\n  }\n}\n\nfunction init() {\n  document.querySelectorAll(\"input[type=email]\").forEach((input) => {\n    function clearAlert(e) {\n      const alert = e.target.parentElement.querySelector(\n        \".email-alert-dismissible\"\n      )\n      if (alert) {\n        alert.remove()\n      }\n    }\n    const myScript = (e) => {\n      const email = e.target.value.trim()\n      const suggestedEmail = emailSpellChecker.run({\n        email,\n      })\n      clearAlert(e)\n      if (!suggestedEmail) {\n        return\n      }\n      const message = `<button class=\"text-sm\">Is your email <strong>${suggestedEmail.full}</strong>?</button>`\n      const alert = document.createElement(\"div\")\n      alert.classList.add(\"email-alert-dismissible\")\n      alert.innerHTML = message\n      alert.onclick = (_) => {\n        clearAlert(e)\n        input.value = suggestedEmail.full\n      }\n      input.after(alert)\n    }\n    input.addEventListener(\"keyup\", debounce(myScript))\n  })\n}\n\nexport default init\n", "var logger = (function () {\n  var oldConsoleLog = null\n  var pub = {}\n\n  pub.enableLogger = function enableLogger() {\n    if (oldConsoleLog == null) return\n\n    window[\"console\"][\"log\"] = oldConsoleLog\n  }\n\n  pub.disableLogger = function disableLogger() {\n    oldConsoleLog = console.log\n    window[\"console\"][\"log\"] = function () {}\n  }\n\n  return pub\n})()\n\nfunction init(debug) {\n  if (debug === true) logger.enableLogger()\n  else logger.disableLogger()\n}\n\nexport default init\n", "import emailSpellChecker from \"./emailSpellCheck\"\nimport logger from \"./logger\"\n\ndismiss_alert = function (e) {\n  e.closest(\".alert-dismissible\").remove()\n}\n\n// Timezone settings. See TimezoneMiddleware in utils/middleware.py\nconst timezone = Intl.DateTimeFormat().resolvedOptions().timeZone // e.g. \"America/New_York\"\ndocument.cookie = `totem_timezone=${timezone}; SameSite=Strict`\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  emailSpellChecker()\n})\n\nlogger(window.TOTEM_DATA.debug)\n"],
  "mappings": "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,GAAmBD,GAAQA,EAAK,iBAAoB,SAAUE,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,CAAI,CAC5D,EACA,OAAO,eAAeF,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5DA,EAAQ,aAAeA,EAAQ,gBAAkBA,EAAQ,eAAiB,OAC1E,IAAMG,GAAmBF,GAAgB,GAA4C,EAS/EG,EAAkB,CACpB,UACA,gBACA,YACA,cACA,kBACA,gBACA,SACA,UACA,aACA,eACA,iBACA,UACA,aACA,SACA,UACA,YACA,YACA,UACA,aACA,cACA,iBACA,gBACA,gBAEA,UACA,UACA,SACA,YACA,iBACA,cACA,UACA,UAEA,YACA,SACA,iBACA,WACA,aACA,aACJ,EACAJ,EAAQ,gBAAkBI,EAC1B,IAAMC,EAAe,CACjB,MACA,SACA,SACA,KACA,KACA,QACA,QACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,SACA,OACA,MACA,MACA,QACA,KACA,KACA,KACA,KAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAIA,MACA,KACA,KACA,MACA,KACA,OACA,QACA,OACA,KACA,KACA,MACA,UACA,KACA,UACA,KACA,KACA,KACA,KACA,OACA,UACA,KACA,KACA,MACA,WACA,KACA,MACJ,EACAL,EAAQ,aAAeK,EACvB,IAAMC,GAAiB,CACnB,gBAAiB,EACjB,QAASF,EACT,qBAAsB,EACtB,mBAAoB,CAAC,QAAS,UAAW,OAAQ,OAAQ,SAAS,EAClE,kBAAmB,EACnB,gBAAiBC,EACjB,iBAAkBF,GAAiB,OACvC,EACAH,EAAQ,eAAiBM,KClKzB,IAAAC,EAAAC,EAAAC,GAAA,cACA,OAAO,eAAeA,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,IAAMC,EAAW,IACjB,SAASC,GA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",
  "names": ["require_assert", "__commonJSMin", "exports", "assert", "condition", "message", "require_assert_valid_user_options", "__commonJSMin", "exports", "__importDefault", "mod", "assert_1", "assertValidUserOptions", "options", "require_encode_email", "__commonJSMin", "exports", "encodeEmail", "email", "require_find_closest_domain", "__commonJSMin", "exports", "findClosestDomain", "opts", "domain", "domains", "distanceFunction", "threshold", "dist", "minDist", "closestDomain", "i", "require_trim", "__commonJSMin", "exports", "WHITESPACE_PATTERN", "trim", "str", "right", "left", "i", "require_parse_email", "__commonJSMin", "exports", "__importDefault", "mod", "trim_1", "MINIUM_EMAIL_PARTS", "parseEmail", "emailStr", "parts", "i", "sld", "tld", "domain", "domainParts", "j", "require_suggest_email", "__commonJSMin", "exports", "__importDefault", "mod", "encode_email_1", "find_closest_domain_1", "parse_email_1", "suggestEmail", "opts", "encodedEmail", "email", "domains", "domainThreshold", "distanceFunction", "secondLevelDomains", "topLevelDomains", "closestDomain", "closestSecondLevelDomain", "closestTopLevelDomain", "rtrn", "require_sift3_distance", "__commonJSMin", "exports", "sift3Distance", "s1", "s2", "c", "offset1", "offset2", "lcs", "maxOffset", "i", "require_config", "__commonJSMin", "exports", "__importDefault", "mod", "sift3_distance_1", "POPULAR_DOMAINS", "POPULAR_TLDS", "DEFAULT_CONFIG", "require_get_options", "__commonJSMin", "exports", "config_1", "getOptions", "userOptions", "require_run", "__commonJSMin", "exports", "__importDefault", "mod", "assert_valid_user_options_1", "suggest_email_1", "get_options_1", "run", "userOptions", "options", "email", "require_dist", "__commonJSMin", "exports", "__importDefault", "mod", "run_1", "config_1", "MailSpellChecker", "import_email_spell_checker", "debounce", "func", "timeout", "timer", "args", "init", "input", "clearAlert", "e", "alert", "myScript", "email", "suggestedEmail", "emailSpellChecker", "message", "_", "emailSpellCheck_default", "logger", "oldConsoleLog", "pub", "init", "debug", "logger_default", "timezone", "emailSpellCheck_default", "logger_default"]
}
