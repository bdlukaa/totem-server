// This file is auto-generated by @hey-api/openapi-ts

export const $LoginOut = {
  properties: {
    login: {
      title: "Login",
      type: "boolean",
    },
  },
  required: ["login"],
  title: "LoginOut",
  type: "object",
} as const

export const $TokenOut = {
  properties: {
    key: {
      title: "Key",
      type: "string",
    },
  },
  required: ["key"],
  title: "TokenOut",
  type: "object",
} as const

export const $UserSchema = {
  properties: {
    email: {
      maxLength: 254,
      title: "Email Address",
      type: "string",
    },
    name: {
      anyOf: [
        {
          maxLength: 255,
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Name",
    },
    is_staff: {
      default: false,
      description: "Designates whether the user can log into this admin site.",
      title: "Staff Status",
      type: "boolean",
    },
    is_active: {
      default: true,
      description:
        "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
      title: "Active",
      type: "boolean",
    },
    is_superuser: {
      default: false,
      description:
        "Designates that this user has all permissions without explicitly assigning them.",
      title: "Superuser Status",
      type: "boolean",
    },
  },
  required: ["email"],
  title: "UserSchema",
  type: "object",
} as const

export const $Message = {
  properties: {
    message: {
      title: "Message",
      type: "string",
    },
  },
  required: ["message"],
  title: "Message",
  type: "object",
} as const

export const $Input = {
  properties: {
    limit: {
      default: 100,
      minimum: 1,
      title: "Limit",
      type: "integer",
    },
    offset: {
      default: 0,
      minimum: 0,
      title: "Offset",
      type: "integer",
    },
  },
  title: "Input",
  type: "object",
} as const

export const $CircleEventSchema = {
  properties: {
    circle: {
      $ref: "#/components/schemas/CircleSchema",
    },
    start: {
      format: "date-time",
      title: "Start",
      type: "string",
    },
    slug: {
      title: "Slug",
      type: "string",
    },
    date_created: {
      format: "date-time",
      title: "Date Created",
      type: "string",
    },
    date_modified: {
      format: "date-time",
      title: "Date Modified",
      type: "string",
    },
  },
  required: ["circle", "date_created", "date_modified"],
  title: "CircleEventSchema",
  type: "object",
} as const

export const $CircleSchema = {
  properties: {
    title: {
      maxLength: 255,
      title: "Title",
      type: "string",
    },
    slug: {
      title: "Slug",
      type: "string",
    },
    date_created: {
      format: "date-time",
      title: "Date Created",
      type: "string",
    },
    date_modified: {
      format: "date-time",
      title: "Date Modified",
      type: "string",
    },
  },
  required: ["title", "date_created", "date_modified"],
  title: "CircleSchema",
  type: "object",
} as const

export const $PagedCircleEventSchema = {
  properties: {
    items: {
      items: {
        $ref: "#/components/schemas/CircleEventSchema",
      },
      title: "Items",
      type: "array",
    },
    count: {
      title: "Count",
      type: "integer",
    },
  },
  required: ["items", "count"],
  title: "PagedCircleEventSchema",
  type: "object",
} as const
