// This file is auto-generated by @hey-api/openapi-ts

export type AuthorFilterSchema = {
    name: string;
    slug: string;
};

export type CategoryFilterSchema = {
    name: string;
    slug: string;
};

export type EventCalendarFilterSchema = {
    /**
     * Space slug
     */
    space_slug?: string;
    /**
     * Month of the year, 1-12
     */
    month?: number;
    /**
     * Year of the month, e.g. 2024
     */
    year?: number;
};

export type EventCalendarSchema = {
    title: string;
    start: string;
    slug: string;
    url: string;
};

export type EventDetailSchema = {
    slug: string;
    title: string;
    description: string;
    price: number;
    seats_left: number;
    duration: number;
    recurring: string;
    subscribers: number;
    start: string;
    attending: boolean;
    open: boolean;
    started: boolean;
    cancelled: boolean;
    joinable: boolean;
    ended: boolean;
    rsvp_url: string;
    join_url: (string | null);
    subscribe_url: string;
    calLink: string;
    attendees: Array<UserSchema>;
    subscribed: (boolean | null);
    user_timezone: (string | null);
};

export type EventListSchema = {
    space: SpaceSchema;
    url: string;
    start?: string;
    slug?: (string | null);
    date_created: string;
    date_modified: string;
    title?: (string | null);
};

export type EventsFilterSchema = {
    category: (string | null);
    author: (string | null);
};

export type FilterOptionsSchema = {
    categories: Array<CategoryFilterSchema>;
    authors: Array<AuthorFilterSchema>;
};

export type Input = {
    limit?: number;
    offset?: number;
};

export type LoginOut = {
    login: boolean;
};

export type Message = {
    message: string;
};

export type PagedEventListSchema = {
    items: Array<EventListSchema>;
    count: number;
};

export type ProfileAvatarTypeEnum = 'TD' | 'IM';

export type SpaceSchema = {
    author: UserSchema;
    title: string;
    slug?: (string | null);
    date_created: string;
    date_modified: string;
    subtitle: string;
};

export type TokenOut = {
    key: string;
};

export type UserSchema = {
    profile_avatar_type: ProfileAvatarTypeEnum;
    name?: (string | null);
    /**
     * Designates whether the user can log into this admin site.
     */
    is_staff?: boolean;
    profile_avatar_seed?: string;
    /**
     * Profile image, must be under 5mb. Will be cropped to a square.
     */
    profile_image?: (string | null);
};

export type TotemApiApiSecretResponse = (unknown);

export type TotemApiApiSecretError = unknown;

export type TotemApiApiLoginData = {
    query: {
        email: string;
    };
};

export type TotemApiApiLoginResponse = (LoginOut);

export type TotemApiApiLoginError = unknown;

export type TotemApiApiTokenData = {
    query: {
        token: string;
    };
};

export type TotemApiApiTokenResponse = (TokenOut);

export type TotemApiApiTokenError = unknown;

export type TotemApiApiCurrentUserResponse = (UserSchema);

export type TotemApiApiCurrentUserError = (Message);

export type TotemCirclesApiListEventsData = {
    query: {
        author: (string | null);
        category: (string | null);
        limit?: number;
        offset?: number;
    };
};

export type TotemCirclesApiListEventsResponse = (PagedEventListSchema);

export type TotemCirclesApiListEventsError = unknown;

export type TotemCirclesApiFilterOptionsResponse = (FilterOptionsSchema);

export type TotemCirclesApiFilterOptionsError = unknown;

export type TotemCirclesApiEventDetailData = {
    path: {
        event_slug: string;
    };
};

export type TotemCirclesApiEventDetailResponse = (EventDetailSchema);

export type TotemCirclesApiEventDetailError = unknown;

export type TotemCirclesApiUpcomingEventsData = {
    query?: {
        /**
         * Month of the year, 1-12
         */
        month?: number;
        /**
         * Space slug
         */
        space_slug?: string;
        /**
         * Year of the month, e.g. 2024
         */
        year?: number;
    };
};

export type TotemCirclesApiUpcomingEventsResponse = (Array<EventCalendarSchema>);

export type TotemCirclesApiUpcomingEventsError = unknown;