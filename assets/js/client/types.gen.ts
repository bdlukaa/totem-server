// This file is auto-generated by @hey-api/openapi-ts

export type LoginOut = {
  login: boolean
}

export type TokenOut = {
  key: string
}

export type ProfileAvatarTypeEnum = "TD" | "IM"

export type UserSchema = {
  profile_avatar_type: ProfileAvatarTypeEnum
  name?: string | null
  /**
   * Designates whether the user can log into this admin site.
   */
  is_staff?: boolean
  profile_avatar_seed?: string
  /**
   * Profile image, must be under 5mb. Will be cropped to a square.
   */
  profile_image?: string | null
}

export type Message = {
  message: string
}

export type EventsFilterSchema = {
  category: string | null
  author: string | null
}

export type Input = {
  limit?: number
  offset?: number
}

export type CircleEventSchema = {
  circle: CircleSchema
  url: string
  start?: string
  slug?: string | null
  date_created: string
  date_modified: string
  title?: string | null
}

export type CircleSchema = {
  author: UserSchema
  title: string
  slug?: string | null
  date_created: string
  date_modified: string
}

export type PagedCircleEventSchema = {
  items: Array
  count: number
}

export type AuthorFilterSchema = {
  name: string
  slug: string
}

export type CategoryFilterSchema = {
  name: string
  slug: string
}

export type FilterOptionsSchema = {
  categories: Array
  authors: Array
}

export type EventDetailSchema = {
  slug: string
  title: string
  description: string
  price: number
  seats_left: number
  duration: number
  recurring: string
  subscribers: number
  start: string
  attending: boolean
  open: boolean
  started: boolean
  cancelled: boolean
  joinable: boolean
  ended: boolean
  rsvp_url: string
  join_url: string | null
  subscribe_url: string
  calLink: string
  attendees: Array
  subscribed: boolean | null
  user_timezone: string | null
}

export type TotemApiApiSecretResponse = unknown

export type TotemApiApiLoginData = {
  email: string
}

export type TotemApiApiLoginResponse = LoginOut

export type TotemApiApiTokenData = {
  token: string
}

export type TotemApiApiTokenResponse = TokenOut

export type TotemApiApiCurrentUserResponse = UserSchema

export type TotemCirclesApiListCirclesData = {
  author: string | null
  category: string | null
  limit?: number
  offset?: number
}

export type TotemCirclesApiListCirclesResponse = PagedCircleEventSchema

export type TotemCirclesApiFilterOptionsResponse = FilterOptionsSchema

export type TotemCirclesApiEventDetailData = {
  eventSlug: string
}

export type TotemCirclesApiEventDetailResponse = EventDetailSchema

export type $OpenApiTs = {
  "/api/v1/protected": {
    get: {
      res: {
        /**
         * OK
         */
        200: unknown
      }
    }
  }
  "/api/v1/auth/login": {
    post: {
      req: TotemApiApiLoginData
      res: {
        /**
         * OK
         */
        200: LoginOut
      }
    }
  }
  "/api/v1/auth/token": {
    post: {
      req: TotemApiApiTokenData
      res: {
        /**
         * OK
         */
        200: TokenOut
      }
    }
  }
  "/api/v1/auth/currentuser": {
    get: {
      res: {
        /**
         * OK
         */
        200: UserSchema
        /**
         * Not Found
         */
        404: Message
      }
    }
  }
  "/api/v1/circles/": {
    get: {
      req: TotemCirclesApiListCirclesData
      res: {
        /**
         * OK
         */
        200: PagedCircleEventSchema
      }
    }
  }
  "/api/v1/circles/filter-options": {
    get: {
      res: {
        /**
         * OK
         */
        200: FilterOptionsSchema
      }
    }
  }
  "/api/v1/circles/event/{event_slug}": {
    get: {
      req: TotemCirclesApiEventDetailData
      res: {
        /**
         * OK
         */
        200: EventDetailSchema
      }
    }
  }
}
