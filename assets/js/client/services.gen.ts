// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { TotemApiApiSecretResponse, TotemApiApiLoginData, TotemApiApiLoginResponse, TotemApiApiTokenData, TotemApiApiTokenResponse, TotemApiApiCurrentUserResponse, TotemCirclesApiListCirclesData, TotemCirclesApiListCirclesResponse, TotemCirclesApiFilterOptionsResponse, TotemCirclesApiEventDetailData, TotemCirclesApiEventDetailResponse, TotemCirclesApiUpcomingEventsData, TotemCirclesApiUpcomingEventsResponse } from './types.gen';

/**
 * Secret
 * @returns unknown OK
 * @throws ApiError
 */
export const totemApiApiSecret = (): CancelablePromise<TotemApiApiSecretResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/api/v1/protected'
}); };

/**
 * Login
 * @param data The data for the request.
 * @param data.email
 * @returns LoginOut OK
 * @throws ApiError
 */
export const totemApiApiLogin = (data: TotemApiApiLoginData): CancelablePromise<TotemApiApiLoginResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/api/v1/auth/login',
    query: {
        email: data.email
    }
}); };

/**
 * Token
 * @param data The data for the request.
 * @param data.token
 * @returns TokenOut OK
 * @throws ApiError
 */
export const totemApiApiToken = (data: TotemApiApiTokenData): CancelablePromise<TotemApiApiTokenResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/api/v1/auth/token',
    query: {
        token: data.token
    }
}); };

/**
 * Current User
 * @returns UserSchema OK
 * @throws ApiError
 */
export const totemApiApiCurrentUser = (): CancelablePromise<TotemApiApiCurrentUserResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/api/v1/auth/currentuser',
    errors: {
        404: 'Not Found'
    }
}); };

/**
 * List Circles
 * @param data The data for the request.
 * @param data.category
 * @param data.author
 * @param data.limit
 * @param data.offset
 * @returns PagedCircleEventSchema OK
 * @throws ApiError
 */
export const totemCirclesApiListCircles = (data: TotemCirclesApiListCirclesData): CancelablePromise<TotemCirclesApiListCirclesResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/api/v1/circles/',
    query: {
        category: data.category,
        author: data.author,
        limit: data.limit,
        offset: data.offset
    }
}); };

/**
 * Filter Options
 * @returns FilterOptionsSchema OK
 * @throws ApiError
 */
export const totemCirclesApiFilterOptions = (): CancelablePromise<TotemCirclesApiFilterOptionsResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/api/v1/circles/filter-options'
}); };

/**
 * Event Detail
 * @param data The data for the request.
 * @param data.eventSlug
 * @returns EventDetailSchema OK
 * @throws ApiError
 */
export const totemCirclesApiEventDetail = (data: TotemCirclesApiEventDetailData): CancelablePromise<TotemCirclesApiEventDetailResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/api/v1/circles/event/{event_slug}',
    path: {
        event_slug: data.eventSlug
    }
}); };

/**
 * Upcoming Events
 * @param data The data for the request.
 * @param data.spaceSlug Space slug
 * @param data.month Month of the year, 1-12
 * @param data.year Year of the month, e.g. 2024
 * @returns EventCalendarSchema OK
 * @throws ApiError
 */
export const totemCirclesApiUpcomingEvents = (data: TotemCirclesApiUpcomingEventsData = {}): CancelablePromise<TotemCirclesApiUpcomingEventsResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/api/v1/circles/calendar',
    query: {
        space_slug: data.spaceSlug,
        month: data.month,
        year: data.year
    }
}); };