// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from "./core/CancelablePromise"
import { OpenAPI } from "./core/OpenAPI"
import { request as __request } from "./core/request"
import type {
  TotemApiApiSecretResponse,
  TotemApiApiLoginData,
  TotemApiApiLoginResponse,
  TotemApiApiTokenData,
  TotemApiApiTokenResponse,
  TotemApiApiCurrentUserResponse,
  TotemCirclesApiListCirclesData,
  TotemCirclesApiListCirclesResponse,
  TotemCirclesApiFilterOptionsResponse,
  TotemCirclesApiEventDetailData,
  TotemCirclesApiEventDetailResponse,
} from "./types.gen"

/**
 * Secret
 * @returns unknown OK
 * @throws ApiError
 */
export const totemApiApiSecret = (): CancelablePromise => {
  return __request(OpenAPI, {
    method: "GET",
    url: "/api/v1/protected",
  })
}

/**
 * Login
 * @param data The data for the request.
 * @param data.email
 * @returns LoginOut OK
 * @throws ApiError
 */
export const totemApiApiLogin = (
  data: TotemApiApiLoginData
): CancelablePromise => {
  return __request(OpenAPI, {
    method: "POST",
    url: "/api/v1/auth/login",
    query: {
      email: data.email,
    },
  })
}

/**
 * Token
 * @param data The data for the request.
 * @param data.token
 * @returns TokenOut OK
 * @throws ApiError
 */
export const totemApiApiToken = (
  data: TotemApiApiTokenData
): CancelablePromise => {
  return __request(OpenAPI, {
    method: "POST",
    url: "/api/v1/auth/token",
    query: {
      token: data.token,
    },
  })
}

/**
 * Current User
 * @returns UserSchema OK
 * @throws ApiError
 */
export const totemApiApiCurrentUser = (): CancelablePromise => {
  return __request(OpenAPI, {
    method: "GET",
    url: "/api/v1/auth/currentuser",
    errors: {
      404: "Not Found",
    },
  })
}

/**
 * List Circles
 * @param data The data for the request.
 * @param data.category
 * @param data.author
 * @param data.limit
 * @param data.offset
 * @returns PagedCircleEventSchema OK
 * @throws ApiError
 */
export const totemCirclesApiListCircles = (
  data: TotemCirclesApiListCirclesData
): CancelablePromise => {
  return __request(OpenAPI, {
    method: "GET",
    url: "/api/v1/circles/",
    query: {
      category: data.category,
      author: data.author,
      limit: data.limit,
      offset: data.offset,
    },
  })
}

/**
 * Filter Options
 * @returns FilterOptionsSchema OK
 * @throws ApiError
 */
export const totemCirclesApiFilterOptions = (): CancelablePromise => {
  return __request(OpenAPI, {
    method: "GET",
    url: "/api/v1/circles/filter-options",
  })
}

/**
 * Event Detail
 * @param data The data for the request.
 * @param data.eventSlug
 * @returns EventDetailSchema OK
 * @throws ApiError
 */
export const totemCirclesApiEventDetail = (
  data: TotemCirclesApiEventDetailData
): CancelablePromise => {
  return __request(OpenAPI, {
    method: "GET",
    url: "/api/v1/circles/event/{event_slug}",
    path: {
      event_slug: data.eventSlug,
    },
  })
}
