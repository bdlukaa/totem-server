// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from "./core/CancelablePromise"
import { OpenAPI } from "./core/OpenAPI"
import { request as __request } from "./core/request"
import type { $OpenApiTs } from "./types.gen"

export class DefaultService {
  /**
   * Secret
   * @returns unknown OK
   * @throws ApiError
   */
  public static totemApiApiSecret(): CancelablePromise<
    $OpenApiTs["/api/v1/protected"]["get"]["res"][200]
  > {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/protected",
    })
  }

  /**
   * Login
   * @param data The data for the request.
   * @param data.email
   * @returns LoginOut OK
   * @throws ApiError
   */
  public static totemApiApiLogin(
    data: $OpenApiTs["/api/v1/auth/login"]["post"]["req"]
  ): CancelablePromise<$OpenApiTs["/api/v1/auth/login"]["post"]["res"][200]> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/api/v1/auth/login",
      query: {
        email: data.email,
      },
    })
  }

  /**
   * Token
   * @param data The data for the request.
   * @param data.token
   * @returns TokenOut OK
   * @throws ApiError
   */
  public static totemApiApiToken(
    data: $OpenApiTs["/api/v1/auth/token"]["post"]["req"]
  ): CancelablePromise<$OpenApiTs["/api/v1/auth/token"]["post"]["res"][200]> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/api/v1/auth/token",
      query: {
        token: data.token,
      },
    })
  }

  /**
   * Current User
   * @returns UserSchema OK
   * @throws ApiError
   */
  public static totemApiApiCurrentUser(): CancelablePromise<
    $OpenApiTs["/api/v1/auth/currentuser"]["get"]["res"][200]
  > {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/auth/currentuser",
      errors: {
        404: "Not Found",
      },
    })
  }
}

export class CirclesService {
  /**
   * List Circles
   * @param data The data for the request.
   * @param data.category
   * @param data.limit
   * @param data.offset
   * @returns PagedCircleEventSchema OK
   * @throws ApiError
   */
  public static totemCirclesApiListCircles(
    data: $OpenApiTs["/api/v1/circles/"]["get"]["req"] = {}
  ): CancelablePromise<$OpenApiTs["/api/v1/circles/"]["get"]["res"][200]> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/circles/",
      query: {
        category: data.category,
        limit: data.limit,
        offset: data.offset,
      },
    })
  }
}
